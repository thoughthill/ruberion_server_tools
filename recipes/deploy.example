require "erb"

set(:application, "<your-domain.com>")

# Using SVN
set(:svn_user, ENV['svn_user'] || "<your-svn-username>")
set(:svn_password, Proc.new { Capistrano::CLI.password_prompt('Enter your SVN password: ') })
set(:svn_repository_url, "http://<your-svn-server>/#{application}/trunk/")
set(:repository, Proc.new { " --username #{svn_user} " + " --password #{svn_password} " +
                            " --no-auth-cache " + svn_repository_url })

# Using GIT
default_run_options[:pty] = true
set :repository, "git@github.com:my_login/my_app.git"
set :scm, "git"
set :scm_passphrase, "" # This is your custom users password
set :branch, "origin/master"
set :deploy_via, :remote_cache

# Servers
set(:webserver1, "<your-domain.com>")
role(:web, webserver1)
role(:app, webserver1)
role(:db,  webserver1, :primary => true)


# Mongrel
set(:mongrel_port, "<your-mongrel-port>") # we usually jump in groups of 10 starting at 8001
set(:mongrel_servers, "<num-of-mongrel-servers>")

# Nginx Domain Names for vhosts
# DO NOT PUT A COMMA OR ANYTHING IN BETWEEN THE SERVER NAMES!!!
set(:domain_names, ["<domain.com> <www.domain.com>"])

# Set to true if we are using these items
set(:using_ferret?, false)
set(:using_memcached?, false)
set(:using_juggernaut?, false)
set(:using_ultrasphinx?, false)

# AFTER HOOKS
after(:deploy, "ultrasphinx:configure", "ultrasphinx:index") if using_ultrasphinx?


# BELOW THIS LINE DOESN'T NEED TO BE CHANGED VERY OFTEN
##################################################################################

# always in production mode when we deploy
set(:rails_env, "production")

# this is the default permission we usually use
set(:chmod755, %w(script))

# we want this to be our standard so we leave it here
set(:deploy_to, "/var/www/apps/#{application}")

# This actually probably will change
set(:user, "root")
set(:use_sudo, false)

# This is usually the same spoot
set(:mongrel_pid, "#{shared_path}/pids/mongrel.pid")
set(:mongrel_conf, "#{shared_path}/config/mongrel_cluster.yml")

# For our purposes this usually is the same
set(:production_db, "#{application.gsub('.', '_')}_production")
# mysql by socket is faster than with host:localhost
set(:mysql_socket, "/var/run/mysqld/mysqld.sock") # This is default for Gentoo
set(:mysql_user, "root")
set(:mysql_password, "")

# Default sphinx variables
set(:sphinx_use_delta, false)
set(:sphinx_db_path, "/opt/local/var/db/sphinx/")
set(:sphinx_mem_limit, "128M")
set(:sphinx_delta_time, 14400)
set(:sphinx_server_port, 3312)
set(:sphinx_min_word_len, 3)

# Default Ferret Variables
set :ferret_port, 8069
set :ferret_pid_file, "#{shared_path}/pids/ferret.pid"

# Juggernaut Variables
#-------------------- Push Server Configuration ---------------------------#
# This is the port that the push server will be on.
# This is the host that the push server will be on.
# Usually it would be 0.0.0.0
# 127.0.0.1 only for local access
# 0.0.0.0 allows outside the machine access
set :juggernaut_push_host, "0.0.0.0"
# This should be the url as seen from the browser.
# Flash's xmlsocket can only connect to addresses in the same domain
# or subdomain. For example, if people access your app from www.test.com than this
# should be "test". Omit the port number and the 'http://'.
set :push_helper_host, "www.clockingit.com"
# This is the port that the push server will be on.
# This port will need ROOT or SUDO access
set :juggernaut_push_port, 443
#This is a 'secret' send by the broadcaster to validate identity.
set :juggernaut_secret, "tH!z.1z.MySeCrEEt.kEyZ"
#This must be the host that your crossdomain policy is located at
set :juggernaut_crossdomain, "xmlsocket://www.clockingit.com:443"
#Allow crossdomain requests from where?
set :juggernaut_allow_crossdomain, "*.clockingit.com"



